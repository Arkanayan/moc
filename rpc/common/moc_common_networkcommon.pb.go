// Code generated by protoc-gen-go. DO NOT EDIT.
// source: moc_common_networkcommon.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Protocol int32

const (
	Protocol_All    Protocol = 0
	Protocol_Tcp    Protocol = 1
	Protocol_Udp    Protocol = 2
	Protocol_Icmpv4 Protocol = 3
	Protocol_Icmpv6 Protocol = 4
)

var Protocol_name = map[int32]string{
	0: "All",
	1: "Tcp",
	2: "Udp",
	3: "Icmpv4",
	4: "Icmpv6",
}

var Protocol_value = map[string]int32{
	"All":    0,
	"Tcp":    1,
	"Udp":    2,
	"Icmpv4": 3,
	"Icmpv6": 4,
}

func (x Protocol) String() string {
	return proto.EnumName(Protocol_name, int32(x))
}

func (Protocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ba09ae1dfdbe03d2, []int{0}
}

type IPAllocationMethod int32

const (
	IPAllocationMethod_Invalid IPAllocationMethod = 0
	IPAllocationMethod_Dynamic IPAllocationMethod = 1
	IPAllocationMethod_Static  IPAllocationMethod = 2
)

var IPAllocationMethod_name = map[int32]string{
	0: "Invalid",
	1: "Dynamic",
	2: "Static",
}

var IPAllocationMethod_value = map[string]int32{
	"Invalid": 0,
	"Dynamic": 1,
	"Static":  2,
}

func (x IPAllocationMethod) String() string {
	return proto.EnumName(IPAllocationMethod_name, int32(x))
}

func (IPAllocationMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ba09ae1dfdbe03d2, []int{1}
}

type Dns struct {
	Servers              []string `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
	Domain               string   `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Search               []string `protobuf:"bytes,3,rep,name=search,proto3" json:"search,omitempty"`
	Options              []string `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dns) Reset()         { *m = Dns{} }
func (m *Dns) String() string { return proto.CompactTextString(m) }
func (*Dns) ProtoMessage()    {}
func (*Dns) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba09ae1dfdbe03d2, []int{0}
}

func (m *Dns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dns.Unmarshal(m, b)
}
func (m *Dns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dns.Marshal(b, m, deterministic)
}
func (m *Dns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dns.Merge(m, src)
}
func (m *Dns) XXX_Size() int {
	return xxx_messageInfo_Dns.Size(m)
}
func (m *Dns) XXX_DiscardUnknown() {
	xxx_messageInfo_Dns.DiscardUnknown(m)
}

var xxx_messageInfo_Dns proto.InternalMessageInfo

func (m *Dns) GetServers() []string {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *Dns) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Dns) GetSearch() []string {
	if m != nil {
		return m.Search
	}
	return nil
}

func (m *Dns) GetOptions() []string {
	if m != nil {
		return m.Options
	}
	return nil
}

func init() {
	proto.RegisterEnum("moc.Protocol", Protocol_name, Protocol_value)
	proto.RegisterEnum("moc.IPAllocationMethod", IPAllocationMethod_name, IPAllocationMethod_value)
	proto.RegisterType((*Dns)(nil), "moc.Dns")
}

func init() { proto.RegisterFile("moc_common_networkcommon.proto", fileDescriptor_ba09ae1dfdbe03d2) }

var fileDescriptor_ba09ae1dfdbe03d2 = []byte{
	// 257 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x90, 0xb1, 0x4b, 0x03, 0x31,
	0x14, 0xc6, 0x7b, 0x97, 0x72, 0x67, 0xe3, 0x12, 0x32, 0xc8, 0x4d, 0x52, 0x14, 0xa1, 0x74, 0xe8,
	0x0d, 0x8a, 0x83, 0xe0, 0x50, 0xe9, 0x72, 0x83, 0x50, 0xaa, 0x2e, 0x2e, 0x25, 0x7d, 0x17, 0xbd,
	0x60, 0x92, 0x17, 0x92, 0x78, 0xe2, 0x7f, 0x2f, 0xe9, 0x9d, 0xdd, 0xbe, 0xdf, 0x83, 0xef, 0xf7,
	0xe0, 0xa3, 0x97, 0x06, 0x61, 0x0f, 0x68, 0x0c, 0xda, 0xbd, 0x95, 0xf1, 0x07, 0xfd, 0xd7, 0x40,
	0x2b, 0xe7, 0x31, 0x22, 0x27, 0x06, 0xe1, 0x4a, 0x51, 0xb2, 0xb1, 0x81, 0x57, 0xb4, 0x0c, 0xd2,
	0xf7, 0xd2, 0x87, 0x2a, 0x9b, 0x93, 0xc5, 0x6c, 0xf7, 0x8f, 0xfc, 0x82, 0x16, 0x2d, 0x1a, 0xa1,
	0x6c, 0x95, 0xcf, 0xb3, 0xc5, 0x6c, 0x37, 0x52, 0xba, 0x07, 0x29, 0x3c, 0x74, 0x15, 0x39, 0x16,
	0x46, 0x4a, 0x26, 0x74, 0x51, 0xa1, 0x0d, 0xd5, 0x74, 0x30, 0x8d, 0xb8, 0x7c, 0xa4, 0x67, 0xdb,
	0xf4, 0x18, 0x50, 0xf3, 0x92, 0x92, 0xb5, 0xd6, 0x6c, 0x92, 0xc2, 0x2b, 0x38, 0x96, 0xa5, 0xf0,
	0xd6, 0x3a, 0x96, 0x73, 0x4a, 0x8b, 0x06, 0x8c, 0xeb, 0xef, 0x18, 0x39, 0xe5, 0x7b, 0x36, 0x5d,
	0x3e, 0x50, 0xde, 0x6c, 0xd7, 0x5a, 0x23, 0x88, 0xe4, 0x7b, 0x96, 0xb1, 0xc3, 0x96, 0x9f, 0xd3,
	0xb2, 0xb1, 0xbd, 0xd0, 0xaa, 0x65, 0x93, 0x04, 0x9b, 0x5f, 0x2b, 0x8c, 0x02, 0x96, 0xa5, 0xee,
	0x4b, 0x14, 0x51, 0x01, 0xcb, 0x9f, 0x6e, 0xde, 0xaf, 0x3f, 0x55, 0xec, 0xbe, 0x0f, 0x2b, 0x40,
	0x53, 0x1b, 0x05, 0x1e, 0x03, 0x7e, 0xc4, 0xda, 0x20, 0xd4, 0xde, 0x41, 0x3d, 0xec, 0x72, 0x28,
	0x8e, 0xc3, 0xdc, 0xfe, 0x05, 0x00, 0x00, 0xff, 0xff, 0xe6, 0x8b, 0x0c, 0x24, 0x3a, 0x01, 0x00,
	0x00,
}
