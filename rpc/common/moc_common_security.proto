// Copyright (c) Microsoft Corporation.
// Licensed under the Apache v2.0 license.

syntax = "proto3";
option go_package = "github.com/microsoft/moc/rpc/common";

package moc;

import "moc_common_common.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

enum Algorithm {
	A_UNKNOWN = 0;
	RSA15 = 1;
	RSAOAEP = 2;
	RSAOAEP256 = 3;
	A256KW = 4;
	A256CBC = 5;
}

enum JSONWebKeySignatureAlgorithm {
	RSNULL = 0;
	ES256 = 1;
	ES256K = 2;
	ES384 = 3; 
	ES512 = 4; 
	PS256 = 5;
	PS384 = 6;
	PS512 = 7;
	RS256 = 8;
	RS384 = 9;
	RS512 = 10;
}

enum KeyOperation {
	ENCRYPT = 0 [deprecated=true];
	DECRYPT = 1 [deprecated=true];
	WRAPKEY = 2 [deprecated=true];
	UNWRAPKEY = 3 [deprecated=true];
	SIGN = 4 [deprecated=true];
	VERIFY = 5 [deprecated=true];
}

// https://docs.microsoft.com/en-us/rest/api/keyvault/createkey/createkey#jsonwebkeytype
enum JsonWebKeyType {
	EC = 0;
	EC_HSM = 1;
	RSA = 2;
	RSA_HSM = 3;
	OCT = 4;
	AES = 5;
}

enum JsonWebKeyCurveName {
	P_256 = 0;
	P_256K = 1;
	P_384 = 2;
	P_521 = 3;
}

enum KeySize {
	K_UNKNOWN = 0;
	_256 = 1;
	_2048 = 2;
	_3072 = 3;
	_4096 = 4;
}

enum IdentityOperation {
	REVOKE = 0 [deprecated=true];
	ROTATE = 1 [deprecated=true];
}

enum IdentityCertificateOperation {
	CREATE_CERTIFICATE = 0 [deprecated=true];
	RENEW_CERTIFICATE = 1 [deprecated=true];
}

enum KeyWrappingAlgorithm {
	CKM_RSA_AES_KEY_WRAP = 0;
	RSA_AES_KEY_WRAP_256 = 1;
	RSA_AES_KEY_WRAP_384 = 2;
}

message Scope {
	string location = 1;
	string resourceGroup = 2;
	ProviderType providerType = 3;
	string resource = 4;
}

message KeyCommon {
	string name = 1;
	string id = 2;
	string locationName = 3;
	// Public Key Value
	bytes publicKey = 4 [(sensitive) = true];
	JsonWebKeyType type = 5;
	string vaultName = 6;
	string groupName = 7;
	Status status = 8;
	KeySize size = 9;
	JsonWebKeyCurveName curve = 10;
	repeated KeyOperation keyOps = 11;
	Tags tags = 12;
	int64 keyRotationFrequencyInSeconds = 13;
	// Private Key Value and wrapping information
	bytes privateKey = 14 [(sensitive) = true];
	PrivateKeyWrappingInfo privateKeyWrappingInfo = 15;
	Entity entity = 16;
	uint32 keyVersion = 17;
	google.protobuf.Timestamp creationTime = 18;
}

message KeyRequest {
	repeated KeyCommon Keys = 1;
	Operation OperationType = 2;
}

message KeyResponse {
	repeated KeyCommon Keys = 1;
	google.protobuf.BoolValue Result = 2;
	string  Error = 3;
}

message KeyOperationRequest {
	KeyCommon key = 1;
	string Data = 2 [(sensitive) = true];
	Algorithm algorithm = 3;
	KeyOperation OBSOLETE_OperationType = 4 [deprecated=true];
	SignVerifyParams  SignVerifyParams = 5;
	ProviderAccessOperation OperationType = 6;
}

message KeyOperationResponse {
	string Data = 1 [(sensitive) = true];
	google.protobuf.BoolValue Result = 2;
	string  Error = 3;
	KeyCommon key = 4;
}

message PrivateKeyWrappingInfo {
	string WrappingKeyName = 1;
	bytes WrappingKeyPublic = 2 [(sensitive) = true];
	KeyWrappingAlgorithm WrappingAlgorithm = 3;
}

message SignVerifyParams {
	JSONWebKeySignatureAlgorithm  algorithm  = 1;
	string signature = 2  [(sensitive) = true];
}

service KeyAgent {
	rpc Invoke(KeyRequest) returns (KeyResponse) {}
	rpc Operate(KeyOperationRequest) returns (KeyOperationResponse) {}
}
